import cv2
import numpy as np
import matplotlib.pyplot as plt

# 读取图像
img_path = r'D:\2\2024-10-24 102920.jpg'
img = cv2.imread(img_path)

# 检查图像是否成功加载
if img is None:
    print("图像未能成功加载，请检查文件格式。")
else:
    # 转换为RGB
    img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

    # 均值滤波
    kernel_size = 5
    mean_filtered_img = cv2.blur(img_rgb, (kernel_size, kernel_size))

    # 拉普拉斯变换
    laplacian = cv2.Laplacian(mean_filtered_img, cv2.CV_64F)

    # 检查拉普拉斯变换结果的最小值和最大值
    print("Laplacian min:", laplacian.min(), "max:", laplacian.max())

    # 归一化处理
    laplacian_normalized = cv2.normalize(laplacian, None, 0, 255, cv2.NORM_MINMAX)

    # 转换为8位图像
    laplacian_normalized = cv2.convertScaleAbs(laplacian_normalized)

    # 显示结果
    plt.figure(figsize=(12, 6))
    plt.rcParams['font.sans-serif'] = ['SimHei']  # 使用黑体
    plt.rcParams['axes.unicode_minus'] = False  # 正确显示负号
    # 原图
    plt.subplot(1, 3, 1)
    plt.imshow(img_rgb)
    plt.title('原图')
    plt.axis('off')

    # 均值滤波图
    plt.subplot(1, 3, 2)
    plt.imshow(mean_filtered_img)
    plt.title('均值滤波图')
    plt.axis('off')

    # 拉普拉斯变换图
    plt.subplot(1, 3, 3)
    plt.imshow(laplacian_normalized, cmap='gray')
    plt.title('拉普拉斯变换图')
    plt.axis('off')

    plt.tight_layout()
    plt.show()
