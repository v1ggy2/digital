import cv2
import numpy as np
import matplotlib.pyplot as plt

# 读取图像
img_path = r'D:\2\IMG_5161.JPG'
img = cv2.imread(img_path)

# 检查图像是否成功加载
if img is None:
    print("图像未能成功加载，请检查文件格式。")
else:
    # 1. RGB空间的直方图均衡化
    img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    r, g, b = cv2.split(img_rgb)

    r_eq = cv2.equalizeHist(r)
    g_eq = cv2.equalizeHist(g)
    b_eq = cv2.equalizeHist(b)

    img_rgb_eq = cv2.merge((r_eq, g_eq, b_eq))

    # 2. HSI空间的直方图均衡化
    img_hsi = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
    h, s, v = cv2.split(img_hsi)

    v_eq = cv2.equalizeHist(v)  # 只对亮度分量进行均衡化
    img_hsi_eq = cv2.merge((h, s, v_eq))
    img_hsi_eq = cv2.cvtColor(img_hsi_eq, cv2.COLOR_HSV2BGR)

    # 显示结果
    plt.figure(figsize=(12, 8))

    plt.rcParams['font.sans-serif'] = ['SimHei']  # 使用黑体
    plt.rcParams['axes.unicode_minus'] = False  # 正确显示负号
    # 原图
    plt.subplot(2, 3, 1)
    plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
    plt.title('原图')
    plt.axis('off')

    # RGB均衡化图
    plt.subplot(2, 3, 2)
    plt.imshow(img_rgb_eq)
    plt.title('RGB均衡化图')
    plt.axis('off')

    # HSI均衡化图
    plt.subplot(2, 3, 3)
    plt.imshow(cv2.cvtColor(img_hsi_eq, cv2.COLOR_BGR2RGB))
    plt.title('HSI均衡化图')
    plt.axis('off')

    plt.tight_layout()
    plt.show()
